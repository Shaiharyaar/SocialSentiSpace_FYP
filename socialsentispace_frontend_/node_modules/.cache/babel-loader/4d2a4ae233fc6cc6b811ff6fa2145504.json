{"ast":null,"code":"import Axios from \"axios\";\nconst USER_API_BASE_URL = \"http://localhost:8080/\";\n\nclass axiosInstance {\n  login(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/login\", credentials);\n  }\n\n  getuser(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/getuser\", credentials);\n  }\n\n  updatechips(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/updatechips\", credentials);\n  }\n\n  signup(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/signup\", credentials);\n  }\n\n  getUserInfo() {\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: \"bearer \" + this.getUserInfo().token\n      }\n    };\n  }\n\n  getTwitterInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getTwitter\", {\n      id: _id\n    });\n  }\n\n  getYoutubeInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getYoutube\", {\n      id: _id\n    });\n  }\n\n  getInstagramInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getInstagram\", {\n      id: _id\n    });\n  }\n\n  getFacebookInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getFacebook\", {\n      id: _id\n    });\n  }\n\n  getchips(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getChips\", data);\n  }\n\n  addchips(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setChips\", data);\n  }\n\n  async delete_all(chipid, social_id, media) {\n    var detail_id = \"\",\n        result_id = \"\";\n\n    if (media == \"Twitter\") {\n      await this.getTwitterInfo(social_id).then(res => {\n        detail_id = res.data.result.LatestTweet._id;\n        result_id = res.data.result.Result._id;\n      }); //deleting Twitter data\n\n      await this.deletetwitter(social_id).then(res => {\n        console.log(res.body);\n\n        if (res.status === 200) {\n          console.log(\"Twitter data deleted.\");\n        } else {\n          alert(\"Loading Twitter data not successful. Try Again!\");\n        }\n      }).catch(error => alert(\"Error loading chips\")); //deleting Latest Tweet data\n\n      await this.deleteLatestTweet(detail_id).then(res => {\n        console.log(res.body);\n\n        if (res.status === 200) {\n          console.log(\"Latest tweet data deleted.\");\n        } else {\n          alert(\"Loading Latest tweet data not successful. Try Again!\");\n        }\n      }).catch(error => alert(\"Error loading chips\"));\n    } else if (media == \"Youtube\") {\n      await this.getYoutubeInfo(social_id).then(res => {\n        detail_id = res.data.result.VideoDetail._id;\n        result_id = res.data.result.Result._id;\n      }); //deleting Twitter data\n\n      await this.deleteyoutube(social_id).then(res => {\n        console.log(res.body);\n\n        if (res.status === 200) {\n          console.log(\"Youtube data deleted.\");\n        } else {\n          alert(\"Loading Youtube data not successful. Try Again!\");\n        }\n      }).catch(error => alert(\"Error loading chips\")); //deleting youtube video data\n\n      await this.deleteyoutubedetails(detail_id).then(res => {\n        console.log(res.body);\n\n        if (res.status === 200) {\n          console.log(\"Latest Video data deleted.\");\n        } else {\n          alert(\"Loading video data not successful. Try Again!\");\n        }\n      }).catch(error => alert(\"Error deleting video data\"));\n    } // deleting Result data\n\n\n    await this.deleteresult(result_id).then(res => {\n      console.log(res.body);\n\n      if (res.status === 200) {\n        console.log(\"result data deleted.\");\n      } else {\n        alert(\"Loading result was not successful. Try Again!\");\n      }\n    }).catch(error => alert(\"Error loading chips\"));\n    await this.deletechip(chipid).then(res => {\n      console.log(res.body);\n\n      if (res.status === 200) {\n        console.log(\"Chip deleted.\");\n      } else {\n        alert(\"Loading chips not successful. Try Again!\");\n      }\n\n      console.log(res);\n    }).catch(error => alert(\"Error loading chips\"));\n  }\n\n  deletetwitter(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteTwitter\", {\n      id: id\n    });\n  }\n\n  deleteLatestTweet(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteLatestTweet\", {\n      id: id\n    });\n  }\n\n  deleteyoutube(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteYoutube\", {\n      id: id\n    });\n  }\n\n  deleteyoutubedetails(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteYoutubeDetails\", {\n      id: id\n    });\n  }\n\n  deletefacebook(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteFacebook\", {\n      id: id\n    });\n  }\n\n  deleteFbDetails(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteFbDetails\", {\n      id: id\n    });\n  }\n\n  deleteinstagram(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteInstagram\", {\n      id: id\n    });\n  }\n\n  deleteInstaPost(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteInstaPost\", {\n      id: id\n    });\n  }\n\n  deletechip(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteChips\", {\n      chipid: id\n    });\n  }\n\n  deleteresult(id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteResult\", {\n      id: id\n    });\n  }\n\n  logOut() {\n    localStorage.removeItem(\"UserInfo\");\n    console.log(\"UserInfo: \", localStorage.getItem(\"UserInfo\"));\n    return true;\n  } //adding Twiiter Information\n\n\n  async addtwitterinfo(label) {\n    //get data on label\n    const result = {\n      positive: 50,\n      negative: 20,\n      neutral: 30\n    };\n    const detail = {\n      username: label,\n      tweet: label,\n      DateTime: label\n    };\n    var resultid = \"\",\n        detailid = \"\",\n        twitterid = \"\";\n    await this.addresult(result).then(res => {\n      if (res.status == 200) {\n        resultid = res.data.result._id;\n      }\n    });\n    await this.addtwitterdetail(detail).then(res => {\n      if (res.status == 200) {\n        detailid = res.data.result._id;\n      }\n    });\n    const data = {\n      trend: label,\n      Result: resultid,\n      LatestTweet: detailid\n    };\n    await this.addtwitter(data).then(res => {\n      if (res.status == 200) {\n        twitterid = res.data.result._id;\n      }\n    });\n    return twitterid;\n  } //adding youtube Information\n\n\n  async addYoutubeinfo(label) {\n    //get data on label\n    const result = {\n      positive: 10,\n      negative: 50,\n      neutral: 40\n    };\n    const url = \"https://www.youtube.com/watch?v=9TfbfS7dbKc\";\n    const detail = {\n      youtuber: label,\n      videoURL: url,\n      videoName: label,\n      VideoDescription: label,\n      DateTime: label\n    };\n    var resultid = \"\",\n        detailid = \"\",\n        id = \"\";\n    await this.addresult(result).then(res => {\n      if (res.status == 200) {\n        resultid = res.data.result._id;\n      }\n    });\n    await this.addyoutubedetail(detail).then(res => {\n      if (res.status == 200) {\n        detailid = res.data.result._id;\n      }\n    });\n    const data = {\n      topic: label,\n      Result: resultid,\n      VideoDetail: detailid\n    };\n    await this.addyoutube(data).then(res => {\n      if (res.status == 200) {\n        id = res.data.result._id;\n      }\n    });\n    return id;\n  } //Adding facebook information\n\n\n  async addFacebookinfo(label) {\n    //get data on label\n    const result = {\n      positive: 10,\n      negative: 50,\n      neutral: 40\n    };\n    const detail = {\n      username: label,\n      post: label,\n      DateTime: label\n    };\n    var resultid = \"\",\n        detailid = \"\",\n        id = \"\";\n    await this.addresult(result).then(res => {\n      if (res.status == 200) {\n        resultid = res.data.result._id;\n      }\n    });\n    await this.addfacebookdetail(detail).then(res => {\n      if (res.status == 200) {\n        detailid = res.data.result._id;\n      }\n    });\n    const data = {\n      postURL: label,\n      Result: resultid,\n      postDetail: detailid\n    };\n    await this.addfacebook(data).then(res => {\n      if (res.status == 200) {\n        id = res.data.result._id;\n      }\n    });\n    return id;\n  } //Adding Instagram information\n\n\n  async addInstagraminfo(label) {\n    //get data on label\n    const result = {\n      positive: 10,\n      negative: 50,\n      neutral: 40\n    };\n    const detail = {\n      username: label,\n      postDetails: label,\n      DateTime: label\n    };\n    var resultid = \"\",\n        detailid = \"\",\n        id = \"\";\n    await this.addresult(result).then(res => {\n      if (res.status == 200) {\n        resultid = res.data.result._id;\n      }\n    });\n    await this.addinstagramdetail(detail).then(res => {\n      if (res.status == 200) {\n        detailid = res.data.result._id;\n      }\n    });\n    const data = {\n      hashtag: label,\n      Result: resultid,\n      latestPost: detailid\n    };\n    await this.addinstagram(data).then(res => {\n      if (res.status == 200) {\n        id = res.data.result._id;\n      }\n    });\n    return id;\n  }\n\n  addresult(result) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setResult\", result);\n  }\n\n  addtwitterdetail(detail) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setLatestTweet\", detail);\n  }\n\n  addtwitter(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setTwitter\", data);\n  }\n\n  addyoutube(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setYoutube\", data);\n  }\n\n  addyoutubedetail(detail) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setVideodetails\", detail);\n  }\n\n  addinstagram(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setInstagram\", data);\n  }\n\n  addinstagramdetail(detail) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setInstaDetails\", detail);\n  }\n\n  addfacebook(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setFacebook\", data);\n  }\n\n  addfacebookdetail(detail) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setfbDetails\", detail);\n  }\n\n  authenticate() {\n    const data = JSON.parse(localStorage.getItem(\"UserInfo\"));\n    return Axios.get(USER_API_BASE_URL + \"users/authenticate\", data);\n  }\n\n}\n\nexport default new axiosInstance();","map":{"version":3,"sources":["C:/Shaiharyaar Ahmad/Final Year Project/1.Main/socialsentispace_frontend_/src/jwt.js"],"names":["Axios","USER_API_BASE_URL","axiosInstance","login","credentials","post","getuser","updatechips","signup","getUserInfo","JSON","parse","localStorage","getItem","getAuthHeader","headers","Authorization","token","getTwitterInfo","_id","id","getYoutubeInfo","getInstagramInfo","getFacebookInfo","getchips","data","addchips","delete_all","chipid","social_id","media","detail_id","result_id","then","res","result","LatestTweet","Result","deletetwitter","console","log","body","status","alert","catch","error","deleteLatestTweet","VideoDetail","deleteyoutube","deleteyoutubedetails","deleteresult","deletechip","deletefacebook","deleteFbDetails","deleteinstagram","deleteInstaPost","logOut","removeItem","addtwitterinfo","label","positive","negative","neutral","detail","username","tweet","DateTime","resultid","detailid","twitterid","addresult","addtwitterdetail","trend","addtwitter","addYoutubeinfo","url","youtuber","videoURL","videoName","VideoDescription","addyoutubedetail","topic","addyoutube","addFacebookinfo","addfacebookdetail","postURL","postDetail","addfacebook","addInstagraminfo","postDetails","addinstagramdetail","hashtag","latestPost","addinstagram","authenticate","get"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/\";\r\n\r\nclass axiosInstance {\r\n  login(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/login\", credentials);\r\n  }\r\n  getuser(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/getuser\", credentials);\r\n  }\r\n  updatechips(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/updatechips\", credentials);\r\n  }\r\n\r\n  signup(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/signup\", credentials);\r\n  }\r\n  getUserInfo() {\r\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  }\r\n  getAuthHeader() {\r\n    return { headers: { Authorization: \"bearer \" + this.getUserInfo().token } };\r\n  }\r\n  getTwitterInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getTwitter\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getYoutubeInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getYoutube\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getInstagramInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getInstagram\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getFacebookInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getFacebook\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getchips(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getChips\", data);\r\n  }\r\n  addchips(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setChips\", data);\r\n  }\r\n\r\n  async delete_all(chipid, social_id, media) {\r\n    var detail_id = \"\",\r\n      result_id = \"\";\r\n\r\n    if (media == \"Twitter\") {\r\n      await this.getTwitterInfo(social_id).then((res) => {\r\n        detail_id = res.data.result.LatestTweet._id;\r\n        result_id = res.data.result.Result._id;\r\n      });\r\n      //deleting Twitter data\r\n      await this.deletetwitter(social_id)\r\n        .then((res) => {\r\n          console.log(res.body);\r\n          if (res.status === 200) {\r\n            console.log(\"Twitter data deleted.\");\r\n          } else {\r\n            alert(\"Loading Twitter data not successful. Try Again!\");\r\n          }\r\n        })\r\n        .catch((error) => alert(\"Error loading chips\"));\r\n\r\n      //deleting Latest Tweet data\r\n      await this.deleteLatestTweet(detail_id)\r\n        .then((res) => {\r\n          console.log(res.body);\r\n          if (res.status === 200) {\r\n            console.log(\"Latest tweet data deleted.\");\r\n          } else {\r\n            alert(\"Loading Latest tweet data not successful. Try Again!\");\r\n          }\r\n        })\r\n        .catch((error) => alert(\"Error loading chips\"));\r\n    } else if (media == \"Youtube\") {\r\n      await this.getYoutubeInfo(social_id).then((res) => {\r\n        detail_id = res.data.result.VideoDetail._id;\r\n        result_id = res.data.result.Result._id;\r\n      });\r\n      //deleting Twitter data\r\n      await this.deleteyoutube(social_id)\r\n        .then((res) => {\r\n          console.log(res.body);\r\n          if (res.status === 200) {\r\n            console.log(\"Youtube data deleted.\");\r\n          } else {\r\n            alert(\"Loading Youtube data not successful. Try Again!\");\r\n          }\r\n        })\r\n        .catch((error) => alert(\"Error loading chips\"));\r\n\r\n      //deleting youtube video data\r\n      await this.deleteyoutubedetails(detail_id)\r\n        .then((res) => {\r\n          console.log(res.body);\r\n          if (res.status === 200) {\r\n            console.log(\"Latest Video data deleted.\");\r\n          } else {\r\n            alert(\"Loading video data not successful. Try Again!\");\r\n          }\r\n        })\r\n        .catch((error) => alert(\"Error deleting video data\"));\r\n    }\r\n    // deleting Result data\r\n    await this.deleteresult(result_id)\r\n      .then((res) => {\r\n        console.log(res.body);\r\n        if (res.status === 200) {\r\n          console.log(\"result data deleted.\");\r\n        } else {\r\n          alert(\"Loading result was not successful. Try Again!\");\r\n        }\r\n      })\r\n      .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    await this.deletechip(chipid)\r\n      .then((res) => {\r\n        console.log(res.body);\r\n        if (res.status === 200) {\r\n          console.log(\"Chip deleted.\");\r\n        } else {\r\n          alert(\"Loading chips not successful. Try Again!\");\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => alert(\"Error loading chips\"));\r\n  }\r\n\r\n  deletetwitter(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteTwitter\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deleteLatestTweet(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteLatestTweet\", {\r\n      id: id,\r\n    });\r\n  }\r\n\r\n  deleteyoutube(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteYoutube\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deleteyoutubedetails(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteYoutubeDetails\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deletefacebook(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteFacebook\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deleteFbDetails(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteFbDetails\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deleteinstagram(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteInstagram\", {\r\n      id: id,\r\n    });\r\n  }\r\n  deleteInstaPost(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteInstaPost\", {\r\n      id: id,\r\n    });\r\n  }\r\n\r\n  deletechip(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteChips\", {\r\n      chipid: id,\r\n    });\r\n  }\r\n  deleteresult(id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteResult\", {\r\n      id: id,\r\n    });\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"UserInfo\");\r\n    console.log(\"UserInfo: \", localStorage.getItem(\"UserInfo\"));\r\n\r\n    return true;\r\n  }\r\n\r\n  //adding Twiiter Information\r\n\r\n  async addtwitterinfo(label) {\r\n    //get data on label\r\n\r\n    const result = { positive: 50, negative: 20, neutral: 30 };\r\n\r\n    const detail = { username: label, tweet: label, DateTime: label };\r\n\r\n    var resultid = \"\",\r\n      detailid = \"\",\r\n      twitterid = \"\";\r\n\r\n    await this.addresult(result).then((res) => {\r\n      if (res.status == 200) {\r\n        resultid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    await this.addtwitterdetail(detail).then((res) => {\r\n      if (res.status == 200) {\r\n        detailid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    const data = { trend: label, Result: resultid, LatestTweet: detailid };\r\n    await this.addtwitter(data).then((res) => {\r\n      if (res.status == 200) {\r\n        twitterid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    return twitterid;\r\n  }\r\n\r\n  //adding youtube Information\r\n\r\n  async addYoutubeinfo(label) {\r\n    //get data on label\r\n\r\n    const result = { positive: 10, negative: 50, neutral: 40 };\r\n    const url = \"https://www.youtube.com/watch?v=9TfbfS7dbKc\";\r\n    const detail = {\r\n      youtuber: label,\r\n      videoURL: url,\r\n      videoName: label,\r\n      VideoDescription: label,\r\n      DateTime: label,\r\n    };\r\n\r\n    var resultid = \"\",\r\n      detailid = \"\",\r\n      id = \"\";\r\n\r\n    await this.addresult(result).then((res) => {\r\n      if (res.status == 200) {\r\n        resultid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    await this.addyoutubedetail(detail).then((res) => {\r\n      if (res.status == 200) {\r\n        detailid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    const data = { topic: label, Result: resultid, VideoDetail: detailid };\r\n    await this.addyoutube(data).then((res) => {\r\n      if (res.status == 200) {\r\n        id = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    return id;\r\n  }\r\n\r\n  //Adding facebook information\r\n\r\n  async addFacebookinfo(label) {\r\n    //get data on label\r\n\r\n    const result = { positive: 10, negative: 50, neutral: 40 };\r\n\r\n    const detail = {\r\n      username: label,\r\n      post: label,\r\n      DateTime: label,\r\n    };\r\n\r\n    var resultid = \"\",\r\n      detailid = \"\",\r\n      id = \"\";\r\n\r\n    await this.addresult(result).then((res) => {\r\n      if (res.status == 200) {\r\n        resultid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    await this.addfacebookdetail(detail).then((res) => {\r\n      if (res.status == 200) {\r\n        detailid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    const data = { postURL: label, Result: resultid, postDetail: detailid };\r\n    await this.addfacebook(data).then((res) => {\r\n      if (res.status == 200) {\r\n        id = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    return id;\r\n  }\r\n\r\n  //Adding Instagram information\r\n\r\n  async addInstagraminfo(label) {\r\n    //get data on label\r\n\r\n    const result = { positive: 10, negative: 50, neutral: 40 };\r\n\r\n    const detail = {\r\n      username: label,\r\n      postDetails: label,\r\n      DateTime: label,\r\n    };\r\n\r\n    var resultid = \"\",\r\n      detailid = \"\",\r\n      id = \"\";\r\n\r\n    await this.addresult(result).then((res) => {\r\n      if (res.status == 200) {\r\n        resultid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    await this.addinstagramdetail(detail).then((res) => {\r\n      if (res.status == 200) {\r\n        detailid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    const data = { hashtag: label, Result: resultid, latestPost: detailid };\r\n    await this.addinstagram(data).then((res) => {\r\n      if (res.status == 200) {\r\n        id = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    return id;\r\n  }\r\n  addresult(result) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setResult\", result);\r\n  }\r\n  addtwitterdetail(detail) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setLatestTweet\", detail);\r\n  }\r\n  addtwitter(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setTwitter\", data);\r\n  }\r\n\r\n  addyoutube(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setYoutube\", data);\r\n  }\r\n  addyoutubedetail(detail) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setVideodetails\", detail);\r\n  }\r\n\r\n  addinstagram(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setInstagram\", data);\r\n  }\r\n\r\n  addinstagramdetail(detail) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setInstaDetails\", detail);\r\n  }\r\n\r\n  addfacebook(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setFacebook\", data);\r\n  }\r\n  addfacebookdetail(detail) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setfbDetails\", detail);\r\n  }\r\n\r\n  authenticate() {\r\n    const data = JSON.parse(localStorage.getItem(\"UserInfo\"));\r\n    return Axios.get(USER_API_BASE_URL + \"users/authenticate\", data);\r\n  }\r\n}\r\nexport default new axiosInstance();\r\n"]},"metadata":{},"sourceType":"module"}