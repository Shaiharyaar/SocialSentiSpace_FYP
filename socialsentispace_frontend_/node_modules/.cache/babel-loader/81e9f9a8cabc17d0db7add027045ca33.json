{"ast":null,"code":"const share = source => {\n  let sinks = [];\n  let sourceTalkback;\n  return function shared(start, sink) {\n    if (start !== 0) return;\n    sinks.push(sink);\n\n    const talkback = (t, d) => {\n      if (t === 2) {\n        const i = sinks.indexOf(sink);\n        if (i > -1) sinks.splice(i, 1);\n        if (!sinks.length) sourceTalkback(2);\n      } else {\n        sourceTalkback(t, d);\n      }\n    };\n\n    if (sinks.length === 1) {\n      source(0, (t, d) => {\n        if (t === 0) {\n          sourceTalkback = d;\n          sink(0, talkback);\n        } else for (let s of sinks.slice(0)) s(t, d);\n\n        if (t === 2) sinks = [];\n      });\n      return;\n    }\n\n    sink(0, talkback);\n  };\n};\n\nexport default share;","map":{"version":3,"sources":["C:/Shaiharyaar Ahmad/Final Year Project/1.Main/socialsentispace_frontend_/node_modules/callbag-share/index.js"],"names":["share","source","sinks","sourceTalkback","shared","start","sink","push","talkback","t","d","i","indexOf","splice","length","s","slice"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,MAAM,IAAI;AACtB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,cAAJ;AAEA,SAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6B;AAClC,QAAID,KAAK,KAAK,CAAd,EAAiB;AACjBH,IAAAA,KAAK,CAACK,IAAN,CAAWD,IAAX;;AAEA,UAAME,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,UAAID,CAAC,KAAK,CAAV,EAAa;AACX,cAAME,CAAC,GAAGT,KAAK,CAACU,OAAN,CAAcN,IAAd,CAAV;AACA,YAAIK,CAAC,GAAG,CAAC,CAAT,EAAYT,KAAK,CAACW,MAAN,CAAaF,CAAb,EAAgB,CAAhB;AACZ,YAAI,CAACT,KAAK,CAACY,MAAX,EAAmBX,cAAc,CAAC,CAAD,CAAd;AACpB,OAJD,MAIO;AACLA,QAAAA,cAAc,CAACM,CAAD,EAAIC,CAAJ,CAAd;AACD;AACF,KARD;;AAUA,QAAIR,KAAK,CAACY,MAAN,KAAiB,CAArB,EAAwB;AACtBb,MAAAA,MAAM,CAAC,CAAD,EAAI,CAACQ,CAAD,EAAIC,CAAJ,KAAU;AAClB,YAAID,CAAC,KAAK,CAAV,EAAa;AACXN,UAAAA,cAAc,GAAGO,CAAjB;AACAJ,UAAAA,IAAI,CAAC,CAAD,EAAIE,QAAJ,CAAJ;AACD,SAHD,MAGO,KAAK,IAAIO,CAAT,IAAcb,KAAK,CAACc,KAAN,CAAY,CAAZ,CAAd,EAA8BD,CAAC,CAACN,CAAD,EAAIC,CAAJ,CAAD;;AACrC,YAAID,CAAC,KAAK,CAAV,EAAaP,KAAK,GAAG,EAAR;AACd,OANK,CAAN;AAOA;AACD;;AAEDI,IAAAA,IAAI,CAAC,CAAD,EAAIE,QAAJ,CAAJ;AACD,GA1BD;AA2BD,CA/BD;;AAiCA,eAAeR,KAAf","sourcesContent":["const share = source => {\n  let sinks = [];\n  let sourceTalkback;\n\n  return function shared(start, sink) {\n    if (start !== 0) return;\n    sinks.push(sink);\n\n    const talkback = (t, d) => {\n      if (t === 2) {\n        const i = sinks.indexOf(sink);\n        if (i > -1) sinks.splice(i, 1);\n        if (!sinks.length) sourceTalkback(2);\n      } else {\n        sourceTalkback(t, d);\n      }\n    };\n\n    if (sinks.length === 1) {\n      source(0, (t, d) => {\n        if (t === 0) {\n          sourceTalkback = d;\n          sink(0, talkback);\n        } else for (let s of sinks.slice(0)) s(t, d);\n        if (t === 2) sinks = [];\n      });\n      return\n    }\n\n    sink(0, talkback);\n  }\n};\n\nexport default share;\n"]},"metadata":{},"sourceType":"module"}