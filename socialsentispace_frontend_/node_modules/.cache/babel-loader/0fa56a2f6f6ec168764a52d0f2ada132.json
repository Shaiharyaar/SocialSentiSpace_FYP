{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shaiharyaar Ahmad\\\\Final Year Project\\\\1.Main\\\\socialsentispace_frontend_\\\\src\\\\Components\\\\Sub_components\\\\Chart_Components\\\\YoutubeComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FaYoutube } from \"react-icons/fa\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Youtubecard } from \"../../Cards/youtubeCard\";\nimport { SubCardloader } from \"../../loading_animations/cardloading\";\nimport axiosInstance from \"../../../jwt\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport const Youtubecomponent = () => {\n  const [info, setinfo] = useState({\n    title1: \"Video Information\",\n    title2: \"Video Title\",\n    title3: \"Description\",\n    post: \"Here lies the Video Description\",\n    name: \"Video\",\n    line1: \"Video title\",\n    dt: \"(date and time)\",\n    url: \"https://www.youtube.com/watch?v=Na8vHaCLwKc\",\n    youtuber: \"Pewdiepie\"\n  });\n  useEffect(() => {\n    loadYoutubeinfo();\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const [location, setLocation] = React.useState(\"\");\n  const [trend, setTrend] = React.useState(\"\");\n  const classes = useStyles();\n  const videos = [];\n\n  const checkhash = val => {\n    if (val == \"\") document.getElementById(\"free-solo-demo\").style.borderColor = \"#888\";else document.getElementById(\"free-solo-demo\").style.borderColor = \"#c13584\";\n  };\n\n  const [loadingcomponent, setloadingcomponent] = useState(false);\n  const [list, setlist] = useState([24, 65, 12]);\n\n  const loadYoutubeinfo = async () => {\n    setloadingcomponent(false);\n    var newdata = \"\";\n    var newinfo = {\n      title1: \"Youtube Information\",\n      title2: \"Youtube Details\",\n      title3: \"posted\",\n      post: \"\",\n      name: \"\",\n      line1: \"This was tweeted at\",\n      dt: \"\",\n      url: \"\",\n      youtuber: \"\",\n      videoname: \"\"\n    };\n    newinfo.title1 = \"Video Information\";\n    newinfo.title2 = \"Video Title\";\n    newinfo.title3 = \"Video Description\";\n    await axiosInstance.getYoutubeInfo(\"5f9b07177ac7c71c74eba498\").then(res => {\n      newdata = res.data.result;\n      console.log(\"INFO: \" + newdata.trend);\n      setTimeout(() => {\n        setloadingcomponent(true);\n      }, 2000);\n    }).catch(error => {\n      console.log(error);\n    });\n    newinfo.youtuber = newdata.VideoDetail.youtuber;\n    newinfo.line1 = newdata.VideoDetail.videoName;\n    newinfo.post = newdata.VideoDetail.VideoDescription;\n    newinfo.url = newdata.VideoDetail.videoURL;\n    newinfo.dt = newdata.VideoDetail.DateTime;\n    setlist([newdata.Result.neutral, newdata.Result.positive, newdata.Result.negative]);\n    console.log(\"list: \", list);\n    setinfo(newinfo);\n    setTimeout(() => {\n      setloadingcomponent(true);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row screens\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Youtube Analysis \"), /*#__PURE__*/React.createElement(FaYoutube, {\n    color: \"red\",\n    size: \"2.2em\",\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col boxes\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    options: videos.map(option => option.title),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Enter a Youtube video link\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => {\n        checkhash(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(LoadComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), !loadingcomponent ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SubCardloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row screens\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Youtube Analysis \"), /*#__PURE__*/React.createElement(FaYoutube, {\n    color: \"red\",\n    size: \"2.2em\",\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Youtubecard, {\n    info: info,\n    countervalues: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst LoadComponent = props => {\n  // if (props.check) {\n  //   return <YoutubeAnalysis url={props.url} />;\n  // } else {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emptyComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Your Search Result Will appear here\")), \" \"))); // }\n};","map":{"version":3,"sources":["C:/Shaiharyaar Ahmad/Final Year Project/1.Main/socialsentispace_frontend_/src/Components/Sub_components/Chart_Components/YoutubeComponent.js"],"names":["React","useEffect","useState","TextField","Autocomplete","FaYoutube","makeStyles","Youtubecard","SubCardloader","axiosInstance","useStyles","theme","formControl","margin","spacing","minWidth","Youtubecomponent","info","setinfo","title1","title2","title3","post","name","line1","dt","url","youtuber","loadYoutubeinfo","open","setOpen","location","setLocation","trend","setTrend","classes","videos","checkhash","val","document","getElementById","style","borderColor","loadingcomponent","setloadingcomponent","list","setlist","newdata","newinfo","videoname","getYoutubeInfo","then","res","data","result","console","log","setTimeout","catch","error","VideoDetail","videoName","VideoDescription","videoURL","DateTime","Result","neutral","positive","negative","marginLeft","marginTop","map","option","title","params","e","target","value","LoadComponent","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { FaYoutube } from \"react-icons/fa\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Youtubecard } from \"../../Cards/youtubeCard\";\r\nimport { SubCardloader } from \"../../loading_animations/cardloading\";\r\nimport axiosInstance from \"../../../jwt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport const Youtubecomponent = () => {\r\n  const [info, setinfo] = useState({\r\n    title1: \"Video Information\",\r\n    title2: \"Video Title\",\r\n    title3: \"Description\",\r\n    post: \"Here lies the Video Description\",\r\n    name: \"Video\",\r\n    line1: \"Video title\",\r\n    dt: \"(date and time)\",\r\n    url: \"https://www.youtube.com/watch?v=Na8vHaCLwKc\",\r\n    youtuber: \"Pewdiepie\",\r\n  });\r\n  useEffect(() => {\r\n    loadYoutubeinfo();\r\n  }, []);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [location, setLocation] = React.useState(\"\");\r\n  const [trend, setTrend] = React.useState(\"\");\r\n  const classes = useStyles();\r\n  const videos = [];\r\n  const checkhash = (val) => {\r\n    if (val == \"\")\r\n      document.getElementById(\"free-solo-demo\").style.borderColor = \"#888\";\r\n    else\r\n      document.getElementById(\"free-solo-demo\").style.borderColor = \"#c13584\";\r\n  };\r\n\r\n  const [loadingcomponent, setloadingcomponent] = useState(false);\r\n  const [list, setlist] = useState([24, 65, 12]);\r\n\r\n  const loadYoutubeinfo = async () => {\r\n    setloadingcomponent(false);\r\n    var newdata = \"\";\r\n    var newinfo = {\r\n      title1: \"Youtube Information\",\r\n      title2: \"Youtube Details\",\r\n      title3: \"posted\",\r\n      post: \"\",\r\n      name: \"\",\r\n      line1: \"This was tweeted at\",\r\n      dt: \"\",\r\n\r\n      url: \"\",\r\n      youtuber: \"\",\r\n      videoname: \"\",\r\n    };\r\n\r\n    newinfo.title1 = \"Video Information\";\r\n    newinfo.title2 = \"Video Title\";\r\n    newinfo.title3 = \"Video Description\";\r\n\r\n    await axiosInstance\r\n      .getYoutubeInfo(\"5f9b07177ac7c71c74eba498\")\r\n      .then((res) => {\r\n        newdata = res.data.result;\r\n        console.log(\"INFO: \" + newdata.trend);\r\n        setTimeout(() => {\r\n          setloadingcomponent(true);\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    newinfo.youtuber = newdata.VideoDetail.youtuber;\r\n    newinfo.line1 = newdata.VideoDetail.videoName;\r\n    newinfo.post = newdata.VideoDetail.VideoDescription;\r\n    newinfo.url = newdata.VideoDetail.videoURL;\r\n    newinfo.dt = newdata.VideoDetail.DateTime;\r\n\r\n    setlist([\r\n      newdata.Result.neutral,\r\n      newdata.Result.positive,\r\n      newdata.Result.negative,\r\n    ]);\r\n    console.log(\"list: \", list);\r\n    setinfo(newinfo);\r\n    setTimeout(() => {\r\n      setloadingcomponent(true);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"row screens\">\r\n        <h3>Youtube Analysis </h3>\r\n        <FaYoutube color=\"red\" size=\"2.2em\" style={{ marginLeft: 10 }} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col boxes\" style={{ marginTop: 10 }}>\r\n          <Autocomplete\r\n            id=\"free-solo-demo\"\r\n            freeSolo\r\n            options={videos.map((option) => option.title)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Enter a Youtube video link\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  checkhash(e.target.value);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n      <LoadComponent />\r\n      {!loadingcomponent ? (\r\n        <div>\r\n          <SubCardloader />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"row screens\">\r\n            <h3>Youtube Analysis </h3>\r\n            <FaYoutube color=\"red\" size=\"2.2em\" style={{ marginLeft: 10 }} />\r\n            <Youtubecard info={info} countervalues={list} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoadComponent = (props) => {\r\n  // if (props.check) {\r\n  //   return <YoutubeAnalysis url={props.url} />;\r\n  // } else {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col\">\r\n        <div className=\"row\">\r\n          <div className=\"emptyComp\">\r\n            <h3>Your Search Result Will appear here</h3>\r\n          </div>{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}