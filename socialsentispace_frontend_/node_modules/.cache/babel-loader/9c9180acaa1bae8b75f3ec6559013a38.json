{"ast":null,"code":"import Axios from \"axios\";\nconst USER_API_BASE_URL = \"http://localhost:8080/\";\n\nclass axiosInstance {\n  login(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/login\", credentials);\n  }\n\n  getuser(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/getuser\", credentials);\n  }\n\n  updatechips(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/updatechips\", credentials);\n  }\n\n  signup(credentials) {\n    return Axios.post(USER_API_BASE_URL + \"users/signup\", credentials);\n  }\n\n  getUserInfo() {\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: \"bearer \" + this.getUserInfo().token\n      }\n    };\n  }\n\n  getTwitterInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getTwitter\", {\n      id: _id\n    });\n  }\n\n  getYoutubeInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getYoutube\", {\n      id: _id\n    });\n  }\n\n  getInstagramInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getInstagram\", {\n      id: _id\n    });\n  }\n\n  getFacebookInfo(_id) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getFacebook\", {\n      id: _id\n    });\n  }\n\n  getchips(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getChips\", data);\n  }\n\n  addchips(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setChips\", data);\n  }\n\n  deletechip(id) {\n    console.log(id);\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteChips\", {\n      chipid: id\n    });\n  }\n\n  logOut() {\n    localStorage.removeItem(\"UserInfo\");\n    console.log(\"UserInfo: \", localStorage.getItem(\"UserInfo\"));\n    return true;\n  }\n\n  async addtwitterinfo(label) {\n    //get data on label\n    const result = {\n      positive: 50,\n      negative: 20,\n      neutral: 30\n    };\n    const detail = {\n      username: label,\n      tweet: label,\n      DateTime: label\n    };\n    var resultid = \"\",\n        detailid = \"\";\n    await this.addresult(result).then(res => {\n      if (res.status == 200) {\n        resultid = res.data.result._id;\n      }\n    });\n    await this.addtwitterdetail(detail).then(res => {\n      if (res.status == 200) {\n        detailid = res.data.result._id;\n      }\n    });\n    const data = {\n      trend: label,\n      Result: resultid,\n      LatestTweet: detailid\n    };\n    await this.addtwitter(data).then(res => {\n      if (res.status == 200) {\n        console.log(\"TWITTER: \", res.data);\n      }\n    });\n  }\n\n  addresult(result) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setResult\", result);\n  }\n\n  addtwitterdetail(detail) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setLatestTweet\", detail);\n  }\n\n  addtwitter(data) {\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setTwitter\", data);\n  }\n\n  authenticate() {\n    const data = JSON.parse(localStorage.getItem(\"UserInfo\"));\n    return Axios.get(USER_API_BASE_URL + \"users/authenticate\", data);\n  }\n\n}\n\nexport default new axiosInstance();","map":{"version":3,"sources":["C:/Shaiharyaar Ahmad/Final Year Project/1.Main/socialsentispace_frontend_/src/jwt.js"],"names":["Axios","USER_API_BASE_URL","axiosInstance","login","credentials","post","getuser","updatechips","signup","getUserInfo","JSON","parse","localStorage","getItem","getAuthHeader","headers","Authorization","token","getTwitterInfo","_id","id","getYoutubeInfo","getInstagramInfo","getFacebookInfo","getchips","data","addchips","deletechip","console","log","chipid","logOut","removeItem","addtwitterinfo","label","result","positive","negative","neutral","detail","username","tweet","DateTime","resultid","detailid","addresult","then","res","status","addtwitterdetail","trend","Result","LatestTweet","addtwitter","authenticate","get"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/\";\r\n\r\nclass axiosInstance {\r\n  login(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/login\", credentials);\r\n  }\r\n  getuser(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/getuser\", credentials);\r\n  }\r\n  updatechips(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/updatechips\", credentials);\r\n  }\r\n\r\n  signup(credentials) {\r\n    return Axios.post(USER_API_BASE_URL + \"users/signup\", credentials);\r\n  }\r\n  getUserInfo() {\r\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  }\r\n  getAuthHeader() {\r\n    return { headers: { Authorization: \"bearer \" + this.getUserInfo().token } };\r\n  }\r\n  getTwitterInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getTwitter\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getYoutubeInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getYoutube\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getInstagramInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getInstagram\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getFacebookInfo(_id) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getFacebook\", {\r\n      id: _id,\r\n    });\r\n  }\r\n  getchips(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/getChips\", data);\r\n  }\r\n  addchips(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setChips\", data);\r\n  }\r\n  deletechip(id) {\r\n    console.log(id);\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/deleteChips\", {\r\n      chipid: id,\r\n    });\r\n  }\r\n  logOut() {\r\n    localStorage.removeItem(\"UserInfo\");\r\n    console.log(\"UserInfo: \", localStorage.getItem(\"UserInfo\"));\r\n\r\n    return true;\r\n  }\r\n\r\n  async addtwitterinfo(label) {\r\n    //get data on label\r\n\r\n    const result = { positive: 50, negative: 20, neutral: 30 };\r\n\r\n    const detail = { username: label, tweet: label, DateTime: label };\r\n\r\n    var resultid = \"\",\r\n      detailid = \"\";\r\n\r\n    await this.addresult(result).then((res) => {\r\n      if (res.status == 200) {\r\n        resultid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    await this.addtwitterdetail(detail).then((res) => {\r\n      if (res.status == 200) {\r\n        detailid = res.data.result._id;\r\n      }\r\n    });\r\n\r\n    const data = { trend: label, Result: resultid, LatestTweet: detailid };\r\n    await this.addtwitter(data).then((res) => {\r\n      if (res.status == 200) {\r\n        console.log(\"TWITTER: \", res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  addresult(result) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setResult\", result);\r\n  }\r\n  addtwitterdetail(detail) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setLatestTweet\", detail);\r\n  }\r\n  addtwitter(data) {\r\n    return Axios.post(USER_API_BASE_URL + \"dashboard/setTwitter\", data);\r\n  }\r\n\r\n  authenticate() {\r\n    const data = JSON.parse(localStorage.getItem(\"UserInfo\"));\r\n    return Axios.get(USER_API_BASE_URL + \"users/authenticate\", data);\r\n  }\r\n}\r\nexport default new axiosInstance();\r\n"]},"metadata":{},"sourceType":"module"}