{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shaiharyaar Ahmad\\\\Final Year Project\\\\1.Main\\\\socialsentispace_frontend_\\\\src\\\\Components\\\\chips.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, Chip, Fab, Paper } from \"@material-ui/core\";\nimport { FaTwitter, FaYoutube, FaInstagram, FaFacebook } from \"react-icons/fa\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport axiosInstance from \"../jwt\";\nimport { Chiploader } from \"./loading_animations/chiploading\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nconst useStyles2 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220\n  }\n}));\nexport default function ChipsArray(props) {\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"No Label\");\n  const [socialMedia, setsocialMedia] = useState(\"\");\n  const [fieldLabel, setfieldLabel] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [currentkey, setcurrentkey] = useState(0);\n  const [social_id, setsocial_id] = useState(\"\");\n  const [loadingChips, setloadingChips] = useState(false);\n  const [userloadChips, setuserloadChips] = useState(false);\n  const demo = []; // var user = JSON.parse(localStorage.getItem(\"UserInfo\"));\n\n  const handlesocialMedia = event => {\n    setsocialMedia(event.target.value || \"\");\n\n    if (event.target.value != \"\") {\n      if (event.target.value == \"Twitter\") setfieldLabel(\"Enter a twitter hashtag\");else if (event.target.value == \"Youtube\") setfieldLabel(\"Enter a Youtube URL Link\");else if (event.target.value == \"Facebook\") setfieldLabel(\"Enter a Fb post URL Link\");else if (event.target.value == \"Instagram\") setfieldLabel(\"Enter an Instagram Hashtag\");\n      document.getElementById(\"Datafield\").style.visibility = \"visible\";\n    } else document.getElementById(\"Datafield\").style.visibility = \"hidden\";\n  };\n\n  const handleData = event => {\n    setData(event.target.value || \"\");\n\n    if (event.target.value != \"\") {\n      document.getElementById(\"okbtn\").style.visibility = \"visible\";\n      document.getElementById(\"span\").style.visibility = \"hidden\";\n    } else {\n      document.getElementById(\"okbtn\").style.visibility = \"hidden\";\n      document.getElementById(\"span\").style.visibility = \"visible\";\n    }\n  };\n\n  const classes1 = useStyles1();\n  const [chipData, setChipData] = React.useState([]);\n  const [defaultchips, setdefaultchips] = React.useState([]);\n  const user = JSON.parse(localStorage.getItem(\"UserInfo\")).data.User;\n  React.useEffect(() => {\n    loaddefault_chips();\n    updatechips();\n  }, []);\n\n  const loaddefault_chips = async () => {\n    console.log(\"Updating chip.\"); // await axiosInstance\n    //   .getuser({ username: user.data.User.username })\n    //   .then((res) => {\n    //     console.log(res.body);\n    //     if (res.status === 200) {\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\n    //     } else {\n    //       alert(\"Loading chips not successful. Try Again!\");\n    //     }\n    //     console.log(res);\n    //   })\n    //   .catch((error) => alert(\"Error loading chips\"));\n\n    var list = [];\n    await axiosInstance.getchips({\n      id: \"1234\"\n    }).then(res => {\n      console.log(\"Getting Chips: \", res.body);\n\n      if (res.status === 200) {\n        res.data.result.forEach((chip, index) => {\n          list.push({\n            key: index,\n            id: \"1234\",\n            social_id: chip.social_id,\n            socialType: chip.MediaType,\n            label: chip.Label,\n            data: chip.Data\n          });\n        });\n        setdefaultchips(list);\n      } else {\n        alert(\"Loading chips not successful. Try Again!\");\n      }\n\n      console.log(res);\n    }).catch(error => alert(\"Error loading chips\")); // user = JSON.parse(localStorage.getItem(\"UserInfo\"));\n  };\n\n  const updatechips = async () => {\n    var list = [];\n    console.log(\"Updating chip.\"); // await axiosInstance\n    //   .getuser({ username: user.data.User.username })\n    //   .then((res) => {\n    //     console.log(res.body);\n    //     if (res.status === 200) {\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\n    //     } else {\n    //       alert(\"Loading chips not successful. Try Again!\");\n    //     }\n    //     console.log(res);\n    //   })\n    //   .catch((error) => alert(\"Error loading chips\"));\n\n    await axiosInstance.getchips({\n      id: user._id\n    }).then(res => {\n      console.log(\"Getting Chips: \", res.body);\n\n      if (res.status === 200) {\n        res.data.result.forEach((chip, index) => {\n          list.push({\n            key: index,\n            id: chip._id,\n            social_id: chip.social_id,\n            socialType: chip.MediaType,\n            label: chip.Label,\n            data: chip.Data\n          });\n        });\n        setChipData(list);\n        setTimeout(() => {\n          setloadingChips(true);\n          setuserloadChips(true);\n        }, 2000);\n        console.log(\"chips Updated\");\n      } else {\n        alert(\"Loading chips not successful. Try Again!\");\n      }\n\n      console.log(res);\n    }).catch(error => alert(\"Error loading chips\")); // user = JSON.parse(localStorage.getItem(\"UserInfo\"));\n  };\n\n  const loadComp = chipToDisplay => () => {\n    if (chipToDisplay.id == \"1234\") {\n      const data = defaultchips.filter(chip => chip.key === chipToDisplay.key);\n      props.compload(data);\n    } else {\n      const data = chipData.filter(chip => chip.key === chipToDisplay.key);\n      props.compload(data);\n    }\n  };\n\n  const handleDelete = chipToDelete => async () => {\n    setuserloadChips(false);\n    await axiosInstance.delete_all(chipToDelete.id, chipToDelete.social_id, chipToDelete.socialType); // await axiosInstance\n    //   .deletechip(chipToDelete.id)\n    //   .then((res) => {\n    //     console.log(res.body);\n    //     if (res.status === 200) {\n    //       console.log(\"Chip deleted.\");\n    //     } else {\n    //       alert(\"Loading chips not successful. Try Again!\");\n    //     }\n    //     console.log(res);\n    //   })\n    //   .catch((error) => alert(\"Error loading chips\"));\n\n    updatechips();\n  };\n\n  const addchip = async data => {\n    setuserloadChips(false); // await axiosInstance\n    //   .updatechips({\n    //     username: user.data.User.username,\n    //     chip: JSON.stringify(chipData),\n    //   })\n    //   .then((res) => {\n    //     if (res.status === 200) {\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\n    //     } else {\n    //       alert(\"login not successful, try again!\");\n    //     }\n    //     console.log(res);\n    //   })\n    //   .catch((error) => alert(\"Error loading user\"));\n\n    await axiosInstance.addchips(data).then(res => {\n      if (res.status === 200) {\n        console.log(\"Chip added.\");\n        updatechips();\n      } else {\n        alert(\"login not successful, try again!\");\n      }\n\n      console.log(res);\n    }).catch(error => alert(\"Error loading user\"));\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOk = async () => {\n    var id = await axiosInstance.addtwitterinfo(name); // if (socialMedia == \"Twitter\") {\n    // } else if (socialMedia == \"Facebook\") {\n    // } else if (socialMedia == \"Youtube\") {\n    // } else {\n    // }\n\n    const list = {\n      userid: user._id,\n      social_id: id,\n      MediaType: socialMedia,\n      Label: name,\n      Data: data\n    };\n    setOpen(false);\n    addchip(list);\n    setsocialMedia(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"ul\",\n    style: {\n      backgroundColor: \"rgba(255,255,255,0.5\",\n      borderRadius: 30,\n      paddingTop: 0,\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, loadingChips ? defaultchips.map(data => {\n    let icon;\n\n    if (data.socialType === \"Twitter\") {\n      icon = /*#__PURE__*/React.createElement(FaTwitter, {\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Youtube\") {\n      icon = /*#__PURE__*/React.createElement(FaYoutube, {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Facebook\") {\n      icon = /*#__PURE__*/React.createElement(FaFacebook, {\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Instagram\") {\n      icon = /*#__PURE__*/React.createElement(FaInstagram, {\n        color: \"#e1306c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: data.key,\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: icon,\n      label: data.label,\n      onDelete: undefined,\n      onClick: loadComp(data),\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 16,\n      color: \"gray\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, \"loading chips\")), userloadChips ? chipData.map(data => {\n    let icon;\n\n    if (data.socialType === \"Twitter\") {\n      icon = /*#__PURE__*/React.createElement(FaTwitter, {\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Youtube\") {\n      icon = /*#__PURE__*/React.createElement(FaYoutube, {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Facebook\") {\n      icon = /*#__PURE__*/React.createElement(FaFacebook, {\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 22\n        }\n      });\n    } else if (data.socialType === \"Instagram\") {\n      icon = /*#__PURE__*/React.createElement(FaInstagram, {\n        color: \"#e1306c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: data.key,\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: icon,\n      label: data.label,\n      onDelete: handleDelete(data),\n      onClick: loadComp(data),\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Chiploader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes1.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: handleClickOpen,\n    color: \"primary\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, \"Create your Shortcut\"), /*#__PURE__*/React.createElement(DialogContent, {\n    style: {\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes2.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes2.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    options: demo.map(option => option.title),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Label\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => {\n        setName(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      marginLeft: 10\n    },\n    className: classes2.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-dialog-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }\n  }, \"Select Social Media\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-dialog-select-label\",\n    id: \"demo-dialog-select\",\n    value: socialMedia,\n    onChange: handlesocialMedia,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaTwitter, {\n    color: \"blue\",\n    style: {\n      marginRight: 8,\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 23\n    }\n  }), \" \", \"Twitter\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Youtube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaYoutube, {\n    color: \"red\",\n    style: {\n      marginRight: 8,\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 23\n    }\n  }), \" \", \"Youtube\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaFacebook, {\n    color: \"blue\",\n    style: {\n      marginRight: 8,\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 23\n    }\n  }), \" \", \"Facebook\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaInstagram, {\n    color: \"#e1306c\",\n    style: {\n      marginRight: 8,\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 23\n    }\n  }), \" \", \"Instagram\"))), /*#__PURE__*/React.createElement(FormControl, {\n    id: \"Datafield\",\n    style: {\n      visibility: \"hidden\"\n    },\n    className: classes2.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    style: {\n      width: 350\n    },\n    options: demo.map(option => option.title),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: fieldLabel,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => {\n        handleData(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"okbtn\",\n    onClick: handleOk,\n    style: {\n      visibility: \"hidden\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 15\n    }\n  }, \"Ok\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"span\",\n    style: {\n      position: \"absolute\",\n      fontFamily: \"Calibri\",\n      right: 32,\n      bottom: 15,\n      color: \"#999\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"Ok\"))))));\n}","map":{"version":3,"sources":["C:/Shaiharyaar Ahmad/Final Year Project/1.Main/socialsentispace_frontend_/src/Components/chips.js"],"names":["React","useState","makeStyles","AddIcon","Grid","Chip","Fab","Paper","FaTwitter","FaYoutube","FaInstagram","FaFacebook","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","FormControl","Select","TextField","Autocomplete","axiosInstance","Chiploader","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","useStyles1","extendedIcon","marginRight","useStyles2","container","formControl","minWidth","ChipsArray","props","classes","classes2","open","setOpen","name","setName","socialMedia","setsocialMedia","fieldLabel","setfieldLabel","data","setData","currentkey","setcurrentkey","social_id","setsocial_id","loadingChips","setloadingChips","userloadChips","setuserloadChips","demo","handlesocialMedia","event","target","value","document","getElementById","style","visibility","handleData","classes1","chipData","setChipData","defaultchips","setdefaultchips","user","JSON","parse","localStorage","getItem","User","useEffect","loaddefault_chips","updatechips","console","log","list","getchips","id","then","res","body","status","result","forEach","index","push","key","socialType","MediaType","label","Label","Data","alert","catch","error","_id","setTimeout","loadComp","chipToDisplay","filter","compload","handleDelete","chipToDelete","delete_all","addchip","addchips","handleClickOpen","handleClose","handleOk","addtwitterinfo","userid","width","backgroundColor","borderRadius","paddingTop","paddingLeft","paddingRight","map","icon","marginTop","undefined","fontSize","color","fontWeight","option","title","params","e","marginLeft","position","fontFamily","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Grid, Chip, Fab, Paper } from \"@material-ui/core\";\r\nimport { FaTwitter, FaYoutube, FaInstagram, FaFacebook } from \"react-icons/fa\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport axiosInstance from \"../jwt\";\r\nimport { Chiploader } from \"./loading_animations/chiploading\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n  },\r\n}));\r\n\r\nexport default function ChipsArray(props) {\r\n  const classes = useStyles();\r\n  const classes2 = useStyles2();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"No Label\");\r\n  const [socialMedia, setsocialMedia] = useState(\"\");\r\n  const [fieldLabel, setfieldLabel] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [currentkey, setcurrentkey] = useState(0);\r\n  const [social_id, setsocial_id] = useState(\"\");\r\n  const [loadingChips, setloadingChips] = useState(false);\r\n  const [userloadChips, setuserloadChips] = useState(false);\r\n\r\n  const demo = [];\r\n\r\n  // var user = JSON.parse(localStorage.getItem(\"UserInfo\"));\r\n\r\n  const handlesocialMedia = (event) => {\r\n    setsocialMedia(event.target.value || \"\");\r\n    if (event.target.value != \"\") {\r\n      if (event.target.value == \"Twitter\")\r\n        setfieldLabel(\"Enter a twitter hashtag\");\r\n      else if (event.target.value == \"Youtube\")\r\n        setfieldLabel(\"Enter a Youtube URL Link\");\r\n      else if (event.target.value == \"Facebook\")\r\n        setfieldLabel(\"Enter a Fb post URL Link\");\r\n      else if (event.target.value == \"Instagram\")\r\n        setfieldLabel(\"Enter an Instagram Hashtag\");\r\n\r\n      document.getElementById(\"Datafield\").style.visibility = \"visible\";\r\n    } else document.getElementById(\"Datafield\").style.visibility = \"hidden\";\r\n  };\r\n  const handleData = (event) => {\r\n    setData(event.target.value || \"\");\r\n\r\n    if (event.target.value != \"\") {\r\n      document.getElementById(\"okbtn\").style.visibility = \"visible\";\r\n      document.getElementById(\"span\").style.visibility = \"hidden\";\r\n    } else {\r\n      document.getElementById(\"okbtn\").style.visibility = \"hidden\";\r\n      document.getElementById(\"span\").style.visibility = \"visible\";\r\n    }\r\n  };\r\n\r\n  const classes1 = useStyles1();\r\n  const [chipData, setChipData] = React.useState([]);\r\n  const [defaultchips, setdefaultchips] = React.useState([]);\r\n  const user = JSON.parse(localStorage.getItem(\"UserInfo\")).data.User;\r\n  React.useEffect(() => {\r\n    loaddefault_chips();\r\n    updatechips();\r\n  }, []);\r\n  const loaddefault_chips = async () => {\r\n    console.log(\"Updating chip.\");\r\n    // await axiosInstance\r\n    //   .getuser({ username: user.data.User.username })\r\n    //   .then((res) => {\r\n    //     console.log(res.body);\r\n    //     if (res.status === 200) {\r\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\r\n    //     } else {\r\n    //       alert(\"Loading chips not successful. Try Again!\");\r\n    //     }\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    var list = [];\r\n    await axiosInstance\r\n      .getchips({ id: \"1234\" })\r\n      .then((res) => {\r\n        console.log(\"Getting Chips: \", res.body);\r\n        if (res.status === 200) {\r\n          res.data.result.forEach((chip, index) => {\r\n            list.push({\r\n              key: index,\r\n              id: \"1234\",\r\n              social_id: chip.social_id,\r\n              socialType: chip.MediaType,\r\n              label: chip.Label,\r\n              data: chip.Data,\r\n            });\r\n          });\r\n          setdefaultchips(list);\r\n        } else {\r\n          alert(\"Loading chips not successful. Try Again!\");\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    // user = JSON.parse(localStorage.getItem(\"UserInfo\"));\r\n  };\r\n  const updatechips = async () => {\r\n    var list = [];\r\n    console.log(\"Updating chip.\");\r\n    // await axiosInstance\r\n    //   .getuser({ username: user.data.User.username })\r\n    //   .then((res) => {\r\n    //     console.log(res.body);\r\n    //     if (res.status === 200) {\r\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\r\n    //     } else {\r\n    //       alert(\"Loading chips not successful. Try Again!\");\r\n    //     }\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    await axiosInstance\r\n      .getchips({ id: user._id })\r\n      .then((res) => {\r\n        console.log(\"Getting Chips: \", res.body);\r\n        if (res.status === 200) {\r\n          res.data.result.forEach((chip, index) => {\r\n            list.push({\r\n              key: index,\r\n              id: chip._id,\r\n              social_id: chip.social_id,\r\n              socialType: chip.MediaType,\r\n              label: chip.Label,\r\n              data: chip.Data,\r\n            });\r\n          });\r\n          setChipData(list);\r\n\r\n          setTimeout(() => {\r\n            setloadingChips(true);\r\n            setuserloadChips(true);\r\n          }, 2000);\r\n          console.log(\"chips Updated\");\r\n        } else {\r\n          alert(\"Loading chips not successful. Try Again!\");\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    // user = JSON.parse(localStorage.getItem(\"UserInfo\"));\r\n  };\r\n  const loadComp = (chipToDisplay) => () => {\r\n    if (chipToDisplay.id == \"1234\") {\r\n      const data = defaultchips.filter(\r\n        (chip) => chip.key === chipToDisplay.key\r\n      );\r\n      props.compload(data);\r\n    } else {\r\n      const data = chipData.filter((chip) => chip.key === chipToDisplay.key);\r\n      props.compload(data);\r\n    }\r\n  };\r\n  const handleDelete = (chipToDelete) => async () => {\r\n    setuserloadChips(false);\r\n    await axiosInstance.delete_all(\r\n      chipToDelete.id,\r\n      chipToDelete.social_id,\r\n      chipToDelete.socialType\r\n    );\r\n\r\n    // await axiosInstance\r\n    //   .deletechip(chipToDelete.id)\r\n    //   .then((res) => {\r\n    //     console.log(res.body);\r\n    //     if (res.status === 200) {\r\n    //       console.log(\"Chip deleted.\");\r\n    //     } else {\r\n    //       alert(\"Loading chips not successful. Try Again!\");\r\n    //     }\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((error) => alert(\"Error loading chips\"));\r\n\r\n    updatechips();\r\n  };\r\n\r\n  const addchip = async (data) => {\r\n    setuserloadChips(false);\r\n\r\n    // await axiosInstance\r\n    //   .updatechips({\r\n    //     username: user.data.User.username,\r\n    //     chip: JSON.stringify(chipData),\r\n    //   })\r\n    //   .then((res) => {\r\n    //     if (res.status === 200) {\r\n    //       localStorage.setItem(\"UserInfo\", JSON.stringify(res));\r\n    //     } else {\r\n    //       alert(\"login not successful, try again!\");\r\n    //     }\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((error) => alert(\"Error loading user\"));\r\n\r\n    await axiosInstance\r\n      .addchips(data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"Chip added.\");\r\n          updatechips();\r\n        } else {\r\n          alert(\"login not successful, try again!\");\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => alert(\"Error loading user\"));\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOk = async () => {\r\n    var id = await axiosInstance.addtwitterinfo(name);\r\n    // if (socialMedia == \"Twitter\") {\r\n    // } else if (socialMedia == \"Facebook\") {\r\n    // } else if (socialMedia == \"Youtube\") {\r\n    // } else {\r\n    // }\r\n\r\n    const list = {\r\n      userid: user._id,\r\n      social_id: id,\r\n      MediaType: socialMedia,\r\n      Label: name,\r\n      Data: data,\r\n    };\r\n    setOpen(false);\r\n    addchip(list);\r\n    setsocialMedia(\"\");\r\n  };\r\n  return (\r\n    <div style={{ width: \"100%\", margin: 20 }}>\r\n      <Paper\r\n        component=\"ul\"\r\n        style={{\r\n          backgroundColor: \"rgba(255,255,255,0.5\",\r\n          borderRadius: 30,\r\n          paddingTop: 0,\r\n          paddingLeft: 20,\r\n          paddingRight: 20,\r\n        }}\r\n        className={classes.root}\r\n      >\r\n        {loadingChips ? (\r\n          defaultchips.map((data) => {\r\n            let icon;\r\n\r\n            if (data.socialType === \"Twitter\") {\r\n              icon = <FaTwitter color=\"blue\" />;\r\n            } else if (data.socialType === \"Youtube\") {\r\n              icon = <FaYoutube color=\"red\" />;\r\n            } else if (data.socialType === \"Facebook\") {\r\n              icon = <FaFacebook color=\"blue\" />;\r\n            } else if (data.socialType === \"Instagram\") {\r\n              icon = <FaInstagram color=\"#e1306c\" />;\r\n            }\r\n            return (\r\n              <li key={data.key} style={{ marginTop: 8 }}>\r\n                <Chip\r\n                  icon={icon}\r\n                  label={data.label}\r\n                  onDelete={undefined}\r\n                  onClick={loadComp(data)}\r\n                  className={classes.chip}\r\n                />\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <div style={{ paddingTop: 13 }}>\r\n            <p style={{ fontSize: 16, color: \"gray\", fontWeight: \"bold\" }}>\r\n              loading chips\r\n            </p>\r\n          </div>\r\n        )}\r\n        {userloadChips ? (\r\n          chipData.map((data) => {\r\n            let icon;\r\n\r\n            if (data.socialType === \"Twitter\") {\r\n              icon = <FaTwitter color=\"blue\" />;\r\n            } else if (data.socialType === \"Youtube\") {\r\n              icon = <FaYoutube color=\"red\" />;\r\n            } else if (data.socialType === \"Facebook\") {\r\n              icon = <FaFacebook color=\"blue\" />;\r\n            } else if (data.socialType === \"Instagram\") {\r\n              icon = <FaInstagram color=\"#e1306c\" />;\r\n            }\r\n            return (\r\n              <li key={data.key} style={{ marginTop: 8 }}>\r\n                <Chip\r\n                  icon={icon}\r\n                  label={data.label}\r\n                  onDelete={handleDelete(data)}\r\n                  onClick={loadComp(data)}\r\n                  className={classes.chip}\r\n                />\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <Chiploader />\r\n        )}\r\n        <div className={classes1.root}>\r\n          <Fab\r\n            onClick={handleClickOpen}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <DialogTitle>Create your Shortcut</DialogTitle>\r\n\r\n            <DialogContent style={{ width: 450 }}>\r\n              <form className={classes2.container}>\r\n                <FormControl className={classes2.formControl}>\r\n                  <Autocomplete\r\n                    id=\"free-solo-demo\"\r\n                    freeSolo\r\n                    options={demo.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label={\"Label\"}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  style={{ marginLeft: 10 }}\r\n                  className={classes2.formControl}\r\n                >\r\n                  <InputLabel id=\"demo-dialog-select-label\">\r\n                    Select Social Media\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-dialog-select-label\"\r\n                    id=\"demo-dialog-select\"\r\n                    value={socialMedia}\r\n                    onChange={handlesocialMedia}\r\n                    input={<Input />}\r\n                  >\r\n                    <MenuItem value={\"Twitter\"}>\r\n                      <FaTwitter\r\n                        color=\"blue\"\r\n                        style={{ marginRight: 8, marginLeft: 5 }}\r\n                      />{\" \"}\r\n                      Twitter\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Youtube\"}>\r\n                      <FaYoutube\r\n                        color=\"red\"\r\n                        style={{ marginRight: 8, marginLeft: 5 }}\r\n                      />{\" \"}\r\n                      Youtube\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Facebook\"}>\r\n                      <FaFacebook\r\n                        color=\"blue\"\r\n                        style={{ marginRight: 8, marginLeft: 5 }}\r\n                      />{\" \"}\r\n                      Facebook\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Instagram\"}>\r\n                      <FaInstagram\r\n                        color=\"#e1306c\"\r\n                        style={{ marginRight: 8, marginLeft: 5 }}\r\n                      />{\" \"}\r\n                      Instagram\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl\r\n                  id=\"Datafield\"\r\n                  style={{ visibility: \"hidden\" }}\r\n                  className={classes2.formControl}\r\n                >\r\n                  <Autocomplete\r\n                    id=\"free-solo-demo\"\r\n                    freeSolo\r\n                    style={{ width: 350 }}\r\n                    options={demo.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label={fieldLabel}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => {\r\n                          handleData(e);\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                id=\"okbtn\"\r\n                onClick={handleOk}\r\n                style={{ visibility: \"hidden\" }}\r\n                color=\"primary\"\r\n              >\r\n                Ok\r\n              </Button>\r\n              <span\r\n                id=\"span\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  fontFamily: \"Calibri\",\r\n                  right: 32,\r\n                  bottom: 15,\r\n                  color: \"#999\",\r\n                }}\r\n              >\r\n                Ok\r\n              </span>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}